{"version":3,"sources":["constants.js","Components/LoadingIndicator/index.js","Components/SelectCharacter/SelectCharacter.js","Components/Arena/index.js","App.js","index.js"],"names":["module","exports","CONTRACT_ADDRESS","ABI","transformCharacterData","characterData","name","imageURI","HP","toNumber","maxHP","attackDamage","LoadingIndicator","_jsxs","className","children","_jsx","SelectCharacter","_ref","setCharacterNFT","_useState","useState","_useState2","_slicedToArray","characters","setCharacters","_useState3","_useState4","gameContract","setGameContract","_useState5","_useState6","mintingCharacter","setMintingCharacter","mintCharacterNFTAction","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","characterId","mintTxn","wrap","_context","prev","next","console","log","mintCharacterNFT","sent","wait","alert","t0","error","stop","_x","apply","arguments","useEffect","ethereum","window","signer","ethers","providers","Web3Provider","getSigner","Contract","getCharacters","_ref3","_callee2","txn","_characters","_context2","getAllDefaultCharacters","map","onCharacterMint","_ref4","_callee3","sender","tokenId","characterIndex","characterNFT","_context3","concat","checkIfUserHasNFT","_x2","_x3","_x4","on","off","length","character","index","alt","src","type","onClick","Arena","currentAccount","boss","setBoss","setAttackState","runAttackAction","tn","attackBoss","replenishHealth","setTimeout","fetchBoss","getBigBoss","onAttackComplete","from","newBossHP","newPlayerHP","bossHP","playerHP","toString","toLowerCase","prevState","_objectSpread","value","max","App","setCurrentAccount","isLoading","setIsLoading","checkIfWalletConnected","_window","accounts","account","checkNetwork","abrupt","request","method","connectWalletAction","_window2","networkVersion","fetchNFTMetadata","_callee4","provider","_context4","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.546b151c.chunk.js","sourcesContent":["\r\nconst CONTRACT_ADDRESS='0x113908D92928D200F19268B61887aB9960ffAD13';\r\n\r\nconst ABI=[\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"string[]\",\r\n        \"name\": \"characterNames\",\r\n        \"type\": \"string[]\"\r\n      },\r\n      {\r\n        \"internalType\": \"string[]\",\r\n        \"name\": \"characterImageURIs\",\r\n        \"type\": \"string[]\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256[]\",\r\n        \"name\": \"characterHp\",\r\n        \"type\": \"uint256[]\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256[]\",\r\n        \"name\": \"characterAttackDamage\",\r\n        \"type\": \"uint256[]\"\r\n      },\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"bossName\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"bossImageURI\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"bossHP\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"bossAttackDamage\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"constructor\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"approved\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"tokenId\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Approval\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"operator\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"approved\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"name\": \"ApprovalForAll\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"newBossHP\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"newPlayerHP\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"AttackComplete\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"tokenId\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"characterIndex\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"CharacterNFTMinted\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"from\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"tokenId\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Transfer\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"tokenId\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"approve\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"attackBoss\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"bigBoss\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"name\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"imageURI\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"HP\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"maxHP\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"attackDamage\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"checkIfUserHasNFT\",\r\n    \"outputs\": [\r\n      {\r\n        \"components\": [\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"characterIndex\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"HP\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"attackDamage\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"maxHP\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"imageURI\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"lastUpdate\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"internalType\": \"struct Mygame.attributes\",\r\n        \"name\": \"\",\r\n        \"type\": \"tuple\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"getAllDefaultCharacters\",\r\n    \"outputs\": [\r\n      {\r\n        \"components\": [\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"characterIndex\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"HP\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"attackDamage\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"maxHP\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"imageURI\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"lastUpdate\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"internalType\": \"struct Mygame.attributes[]\",\r\n        \"name\": \"\",\r\n        \"type\": \"tuple[]\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"tokenId\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"getApproved\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"getBigBoss\",\r\n    \"outputs\": [\r\n      {\r\n        \"components\": [\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"imageURI\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"HP\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"maxHP\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"attackDamage\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"internalType\": \"struct Mygame.BigBoss\",\r\n        \"name\": \"\",\r\n        \"type\": \"tuple\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"operator\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"isApprovedForAll\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"_characterIndex\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"mintCharacterNFT\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"nftHolderAttributes\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"characterIndex\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"name\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"HP\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"attackDamage\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"maxHP\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"imageURI\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"lastUpdate\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"nftHolders\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"tokenId\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"ownerOf\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"replenishHealth\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"from\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"tokenId\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"safeTransferFrom\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"from\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"tokenId\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"internalType\": \"bytes\",\r\n        \"name\": \"data\",\r\n        \"type\": \"bytes\"\r\n      }\r\n    ],\r\n    \"name\": \"safeTransferFrom\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"operator\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"approved\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"name\": \"setApprovalForAll\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"bytes4\",\r\n        \"name\": \"interfaceId\",\r\n        \"type\": \"bytes4\"\r\n      }\r\n    ],\r\n    \"name\": \"supportsInterface\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"symbol\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"_tokenId\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"tokenURI\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"from\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"tokenId\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"transferFrom\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  }\r\n];\r\n\r\n  const transformCharacterData = (characterData) => {\r\n    return {\r\n      name: characterData.name,\r\n      imageURI: characterData.imageURI,\r\n      HP: characterData.HP.toNumber(),\r\n      maxHP: characterData.maxHP.toNumber(),\r\n      attackDamage: characterData.attackDamage.toNumber(),\r\n      \r\n    };\r\n  };\r\nmodule.exports={CONTRACT_ADDRESS,ABI,transformCharacterData};","import React from 'react';\r\nimport './LoadingIndicator.css';\r\n\r\nconst LoadingIndicator = () => {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import React,{useEffect,useState} from 'react';\r\nimport './SelectCharacter.css';\r\nimport { ethers } from 'ethers';\r\nimport { CONTRACT_ADDRESS,ABI,transformCharacterData } from '../../constants';\r\nimport LoadingIndicator from '../LoadingIndicator';\r\nconst SelectCharacter=({setCharacterNFT})=>{\r\n\r\n    \r\nconst [characters,setCharacters] = useState([]);\r\nconst [gameContract,setGameContract] =useState(null)\r\nconst [mintingCharacter, setMintingCharacter] = useState(false);\r\n\r\n\r\nconst mintCharacterNFTAction=async(characterId)=>{\r\n  try {\r\nif(gameContract){\r\n    \r\n  setMintingCharacter(true);\r\n  \r\n  console.log(\"Minting in progress!!\");\r\n    const mintTxn = await gameContract.mintCharacterNFT(characterId);\r\n    await mintTxn.wait();\r\n    console.log(\"mintTxn: \"+mintTxn);\r\n    alert(\"Minted NFT!\")}\r\n    setMintingCharacter(false);\r\n  } catch (error) {\r\n    console.error(error);\r\n    setMintingCharacter(false);\r\n  }\r\n\r\n}\r\n\r\nuseEffect(() => {\r\n  const {ethereum} = window;\r\n\r\n  if(ethereum){\r\n    const provider= new ethers.providers.Web3Provider(ethereum);\r\n    const signer = provider.getSigner();\r\n    const gameContract= new ethers.Contract(\r\n        CONTRACT_ADDRESS,ABI,signer\r\n    );\r\n\r\n    setGameContract(gameContract);\r\n  }\r\n\r\n  else{\r\n    console.log(\"Ethereum object not found!\");\r\n  }\r\n\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  const getCharacters=async()=>{\r\n    try{\r\n        console.log(\"Getting characters to mint!\");\r\n        const txn = await gameContract.getAllDefaultCharacters();\r\n\r\n        console.log('charactersTxn:', txn);\r\n\r\n        const characters = txn.map((characterData) =>\r\n        transformCharacterData(characterData));\r\n        \r\n        setCharacters(characters);\r\n\r\n    }\r\n        catch(error){\r\n            console.error(error);\r\n        }\r\n  };\r\n\r\nconst onCharacterMint=async(sender,tokenId,characterIndex)=>{\r\n  console.log(`CharacterNFT minted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`);\r\n\r\n  if(gameContract){\r\n    const characterNFT = await gameContract.checkIfUserHasNFT();\r\n    console.log('CharacterNFT: ',characterNFT);\r\n    setCharacterNFT(transformCharacterData(characterNFT));\r\n  }\r\n};\r\n\r\n  if(gameContract){\r\n     getCharacters();\r\n  gameContract.on('CharacterNFTMinted',onCharacterMint);\r\n    }\r\nreturn()=>{\r\n  if(gameContract){\r\n    gameContract.off('CharacterNFTMinted',onCharacterMint);\r\n  }\r\n};\r\n\r\n}, [gameContract]);\r\n\r\nconst renderCharacters=()=>{\r\n    console.log(\"renderCharacters called!\");\r\n    return characters.map((character,index)=>{\r\n        return(\r\n        <div className=\"character-item\" key={character.name}>\r\n            <div className=\"name-container\"><p>{character.name}</p></div>\r\n            <img alt={character.name} src={character.imageURI} />\r\n            <button className=\"character-mint-button\" type='button' onClick={()=> mintCharacterNFTAction(index)}\r\n>{`Mint ${character.name}`}</button>\r\n        </div>\r\n        );\r\n    });\r\n};\r\n\r\n    return(\r\n        <div className='select-character-container'>\r\n            <h2>Mint Your Hero. Choose wisely.</h2>\r\n            {characters.length > 0 && (\r\n      <div className=\"character-grid\">{renderCharacters()}</div>\r\n    )}\r\n    {mintingCharacter && (\r\n      <div className=\"loading\">\r\n        <div className=\"indicator\">\r\n          <LoadingIndicator/>\r\n          <p>Minting in progress...</p>\r\n        </div>\r\n        <img src=\"https://media2.giphy.com/media/61tYloUgq1eOk/giphy.gif?cid=ecf05e47dg95zbpabxhmhaksvoy8h526f96k4em0ndvx078s&rid=giphy.gif&ct=g\" alt=\"Minting Loading Screen\" />\r\n      </div>\r\n      )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectCharacter;","import React, {useEffect, useState} from 'react';\r\nimport {ethers} from 'ethers';\r\nimport { CONTRACT_ADDRESS,ABI,transformCharacterData } from '../../constants';\r\nimport './Arena.css'\r\n\r\nconst Arena = ({characterNFT,setCharacterNFT,currentAccount})=>{\r\n\r\n    const [gameContract,setGameContract]= useState(null);\r\n\r\n    const [boss,setBoss] = useState(null);\r\n    const [attackState , setAttackState] = useState('');\r\n    const runAttackAction = async () => {\r\ntry {\r\n  if(gameContract){\r\n    setAttackState(\"attacking\");\r\n    console.log(\"Attacking Boss!\");\r\n    const txn = await gameContract.attackBoss();\r\n    await txn.wait();\r\n    console.log(\"attacktxn: \",txn);\r\n    setAttackState('hit');\r\n    const tn = await gameContract.replenishHealth();\r\n    await tn.wait();\r\n    setTimeout(() => {\r\n      console.log(\"playerhealth increased  \",tn);\r\n    },60000);\r\n  }\r\n} catch (error) {\r\n  console.error(error);\r\n  setAttackState('');\r\n}\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n        const {ethereum} = window;\r\n\r\n        if(ethereum){\r\n            const provider = new ethers.providers.Web3Provider(ethereum);\r\n            const signer = provider.getSigner();\r\n            const gameContract = new ethers.Contract(CONTRACT_ADDRESS,ABI,signer);\r\n            setGameContract(gameContract);\r\n        }\r\n        else{\r\n            console.log(\"Ethereum Object not Found\");\r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {        \r\n      const fetchBoss=async()=>{\r\n        const txn = await gameContract.getBigBoss();\r\n        console.log('Boss: ',txn);\r\n        setBoss(transformCharacterData(txn));\r\n      };\r\n      const onAttackComplete =(from,newBossHP,newPlayerHP)=>{\r\n        const bossHP = newBossHP.toNumber();\r\n        const playerHP=newPlayerHP.toNumber();\r\n        const sender = from.toString(); \r\n        console.log(`Attack Complete: Boss HP: ${bossHP} Player HP: ${playerHP} `);\r\n        if(currentAccount === sender.toLowerCase()){\r\n          setBoss((prevState)=>{\r\n            return {...prevState,HP:bossHP};\r\n          });\r\n          setCharacterNFT((prevState)=>{\r\n            return {...prevState,HP:playerHP};\r\n          });\r\n        }\r\n        else{\r\n          setBoss((prevState)=>{\r\n            return {...prevState,HP:bossHP};\r\n          });\r\n        }\r\n      }\r\n\r\n      if(gameContract){\r\n        fetchBoss();\r\n        gameContract.on('AttackComplete', onAttackComplete);\r\n      }\r\n      return()=>{\r\n        if(gameContract){\r\n          gameContract.off(\"Attack Complete\",onAttackComplete)\r\n        }\r\n      }\r\n    }, [gameContract])\r\n    \r\n\r\n    return(\r\n        <div className='arena-container'>\r\n          {boss && (\r\n            <div className=\"boss-container\">\r\n              <div className={`boss-container`}>\r\n                <h2>{boss.name}</h2>\r\n                <div className=\"image-content\">\r\n                  <img src={boss.imageURI} alt={`Boss ${boss.name}`}/>\r\n                  <div className=\"health-bar\">\r\n                    <progress value={boss.HP} max={boss.maxHP}/>\r\n                    <p>{`${boss.HP} / ${boss.maxHP} HP`}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"attack-container\">\r\n                <button className=\"cta-button\" onClick={runAttackAction}>{`Attack ${boss.name}`}</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n{characterNFT &&(\r\n<div className=\"player-container\">\r\n          <div className=\"player-container\">\r\n            <h2>Your Character</h2>\r\n            <div className=\"player\">\r\n              <div className=\"image-content\">\r\n                <h2>{characterNFT.name}</h2>\r\n                <img src={characterNFT.imageURI} alt={`Character ${characterNFT.name}`} />\r\n                  <div className=\"health-bar\">\r\n                    <progress value={characterNFT.HP} max={characterNFT.maxHP}/>\r\n                    <p>{`${characterNFT.HP} / ${characterNFT.maxHP} HP`}</p>\r\n                  </div>  \r\n              </div>\r\n              <div className=\"stats\">\r\n                <h4>{`Attack Damage:${characterNFT.attackDamage}`}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Arena;","import React, {useEffect,useState} from 'react';\r\nimport { ethers } from 'ethers';\r\nimport './App.css';\r\nimport SelectCharacter from './Components/SelectCharacter/SelectCharacter.js';\r\nimport { CONTRACT_ADDRESS,ABI,transformCharacterData } from './constants';\r\nimport Arena from './Components/Arena';\r\nimport LoadingIndicator from './Components/LoadingIndicator'\r\n\r\nconst App = () => {\r\n  \r\n  const [currentAccount,setCurrentAccount] =useState(null);\r\n  const [characterNFT,setCharacterNFT] = useState(null);\r\n\r\n  const [isLoading,setIsLoading] = useState(false);\r\n\r\n  const checkIfWalletConnected= async()=>{\r\n    checkNetwork();\r\n    try {\r\n      \r\n      const {ethereum} = window;\r\n      \r\n      if(!ethereum){\r\n        console.log(\"Metamask not present!\");\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      else{\r\n        console.log(\"We have the object\",ethereum);\r\n  \r\n        const accounts = await ethereum.request({method:'eth_accounts'});\r\n  \r\n        if(accounts.length !==0){\r\n          const account = accounts[0];\r\n          console.log(\"Authorized Account found!\", account);\r\n          setCurrentAccount(account);\r\n        }\r\n        else{\r\n          console.log(\"Authorized account not found!\");\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n\r\nconst renderContent =()=>{\r\n    if(isLoading){\r\n      return <LoadingIndicator/>\r\n    }\r\n\r\n    if(!currentAccount){\r\n      return(<div className=\"connect-wallet-container\">\r\n      <img\r\n        src=\"https://media.tenor.com/qcVUCfxHJFUAAAAC/vader.gif\"\r\n        alt=\"Vader gif\"\r\n      />\r\n     \r\n      <button className=\"cta-button connect-wallet-button\" onClick={connectWalletAction}> Please connect your wallet!!</button>\r\n    </div>)\r\n    }\r\n    else if(currentAccount && !characterNFT){\r\n      return <SelectCharacter setCharacterNFT={setCharacterNFT}/>\r\n    }\r\n\r\n    else if(currentAccount && characterNFT){\r\n      return <Arena characterNFT={characterNFT} currentAccount={currentAccount} setCharacterNFT={setCharacterNFT}/>\r\n    }\r\n};\r\n\r\n  const connectWalletAction= async()=>{\r\n    try {\r\n      const {ethereum} = window;\r\n      if(!ethereum){\r\n        console.log(\"Not connected!\");\r\n        alert(\"Please connect to metamask\");\r\n        return;\r\n      }\r\n\r\n      const accounts = await ethereum.request({method:'eth_requestAccounts',});\r\n\r\n      console.log(\"Connected\", accounts[0]);\r\n      setCurrentAccount(accounts[0]);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const checkNetwork =async()=>{\r\n    try{\r\n      console.log(\"type of network version is: \",typeof(window.ethereum.networkVersion))\r\n      if(window.ethereum.networkVersion !==\"11155111\"){\r\n        alert(\"Please connect to sepolia!\")\r\n      }\r\n    }\r\n    catch(error){\r\n    console.error(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    checkNetwork();\r\n    checkIfWalletConnected();\r\n  }, []); \r\n  \r\n\r\n  useEffect(()=>{\r\n    const fetchNFTMetadata = async()=>{\r\n      console.log(\"Checking for Character NFT on address:\", currentAccount);\r\n\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS,ABI,signer);\r\n\r\n      const txn = await gameContract.checkIfUserHasNFT();\r\n      if(txn.name){\r\n        console.log(\"Congratulations you already have a NFT!\");\r\n        \r\n        setCharacterNFT(transformCharacterData(txn));\r\n      }\r\n      else{\r\n        console.log(\"You do not have a NFT\");\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    if(currentAccount){\r\n      console.log(\"CurrentAccount: \"+ currentAccount);\r\n      fetchNFTMetadata();\r\n    }\r\n  },[currentAccount]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"header-container\">\r\n          <p className=\"header gradient-text\">⚔️ Metaverse Slayer ⚔️</p>\r\n          <p className=\"sub-text\">Team up to protect the Metaverse!</p>\r\n\r\n          {renderContent()}\r\n        </div>\r\n        \r\n        <div className=\"footer-container\">\r\n        \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}